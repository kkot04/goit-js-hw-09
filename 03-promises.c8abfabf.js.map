{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAASF,SAASG,iBAAiB,SACnCC,EAAaJ,SAASC,cAAc,kBACpCI,EAAYL,SAASC,cAAc,iBACnCK,EAAcN,SAASC,cAAc,mBACrCM,EAAYP,SAASC,cAAc,yBA6BzC,SAASO,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAS,CAACC,EAASC,KACxBL,EACFI,EAAS,uBAAqBN,QAAiBC,OAE7CM,EAAK,sBAAoBP,QAAeC,MAAU,IAErDO,MAAKC,IACNC,YAAW,KACTtB,EAAAuB,OAAOC,QAAQH,EAAI,GAClBR,EAAM,IAEVY,OAAOJ,IACNC,YAAW,KACTtB,EAAAuB,OAAOG,QAAQL,EAAI,GAClBR,EAAM,G,CAzCbH,EAAUiB,aAAa,YAAY,GAEnCzB,EAAK0B,iBAAiB,SAAS,KACT,IAAIvB,GAAQwB,MAAKC,GAAyB,KAAhBA,EAAMC,QAElDrB,EAAUiB,aAAa,YAAY,GAEnCjB,EAAUsB,gBAAgB,WAAW,IAIzC9B,EAAK0B,iBAAiB,UAAWK,IAC/BA,EAAMC,iBAEN,IAAIrB,EAAQsB,OAAO5B,EAAWwB,OAC9B,MAAMK,EAAOD,OAAO3B,EAAUuB,OACxBM,EAASF,OAAO1B,EAAYsB,OAElC,IAAK,IAAIO,EAAI,EAAGA,GAAKD,EAAQC,GAAI,EAC/B3B,EAAc2B,EAAGzB,GACjBA,GAASuB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst form = document.querySelector('.form')\nconst inputs = document.querySelectorAll('input')\nconst delayInput = document.querySelector('[name=\"delay\"]')\nconst stepInput = document.querySelector('[name=\"step\"]')\nconst amountInput = document.querySelector('[name=\"amount\"]')\nconst createBtn = document.querySelector('button[type=\"submit\"]')\n\n\n\ncreateBtn.setAttribute('disabled', true)\n\nform.addEventListener('input', () =>{\n  const inputsValue = [...inputs].some(input => input.value === '')\n  if(inputsValue){\n    createBtn.setAttribute('disabled', true)\n  } else{\n    createBtn.removeAttribute('disabled')\n  }\n})\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault()\n\n  let delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n\n  for (let i = 1; i <= amount; i +=1) {\n    createPromise(i, delay); \n    delay += step;\n  }\n})\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise ((fulfill, reject) => {\n    if (shouldResolve) {\n      fulfill (`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`)\n    }\n  }).then(arr => {\n    setTimeout(() => {\n      Notify.success(arr);\n    }, delay)\n  } )\n  .catch((arr) => {\n    setTimeout(() => {\n      Notify.failure(arr);\n    }, delay)\n  }); \n\n\n}\n\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$inputs","querySelectorAll","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createBtn","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","fulfill","reject","then","arr","setTimeout","Notify","success","catch","failure","setAttribute","addEventListener","some","input","value","removeAttribute","event","preventDefault","Number","step","amount","i"],"version":3,"file":"03-promises.c8abfabf.js.map"}